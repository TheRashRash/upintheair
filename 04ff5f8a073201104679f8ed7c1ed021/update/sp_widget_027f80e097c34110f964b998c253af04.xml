<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function() {
  /* widget controller */
  var c = this;
		c.template = "kb_article_list_template";
}]]></client_script>
        <controller_as>c</controller_as>
        <css>h1 {
  color: #05A6A6
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,color,glyph,css</field_list>
        <has_preview>false</has_preview>
        <id>uita_most_useful_knowledge</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>UITA Most Useful Knowledge</name>
        <option_schema>[{"hint":"Knowledge","name":"table","default_value":"kb_knowledge","label":"Table","type":"choice","choices":[{"label":"Knowledge","value":"kb_knowledge"}]},{"hint":"Display Field","name":"display_field","default_value":"short_description","label":"Display Field","type":"field_name"},{"hint":"Additional Fields to be displayed","name":"secondary_fields","label":"Secondary Fields","type":"field_list"},{"hint":"Number of records to show in widget","name":"max_records","default_value":"","label":"Max number of records to show","type":"string"},{"hint":"Show even when empty","name":"always_show","label":"Show even when empty","type":"boolean"},{"hint":"Show Secondary Fields Label","name":"show_secondary_fields_label","label":"Show Secondary Fields Label","type":"boolean"},{"displayValue":"Knowledge Base","hint":"Show result for specific knowledge base. Keep blank to show for all bases.","name":"knowledge_base","label":"Knowledge Base","type":"reference","value":"kb_knowledge_base","ed":{"reference":"kb_knowledge_base"}}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	
	var kbViewModel = new global.KBViewModel();
	if(kbViewModel.checkCrawlerBot())
		return;
	if(input)
		return;
	else {
	options.aria_label_title= options.title || gs.getMessage('Most Useful Articles');
	options.title = options.title || gs.getMessage('Most Useful');
	options.display_field = options.display_field || "short_description"; 
	options.secondary_fields = options.secondary_fields ? options.secondary_fields.split(",") : getKnowledgeFieldsfromProperties();
	options.show_secondary_fields_label = options.show_secondary_fields_label ? options.show_secondary_fields_label == 'true' : false;
	options.max_records = options.max_records || gs.getProperty('glide.knowman.content_block_limit')|| '5';
	options.always_show = options.always_show ? options.always_show == 'true' : true;
	options.reverse = true;


	var kbService = new KBPortalService();
	options.knowledge_base = options.knowledge_base || String(kbService.getServicePortalKnowledgeBases($sp.getPortalRecord().url_suffix)) || "";
	var result = [];
	var kbData = '';	
		
	var use_session_cache = gs.getProperty('glide.knowman.use_session_cache_for_most_useful_articles',false) == "true"; 

	if(use_session_cache){
		kbData = gs.getSession().getClientData('kb_most_useful_articles');
		if(gs.nil(kbData)){
			kbData = kbService.getMostUsefulArticles(options.max_records,options.display_field,options.secondary_fields,options.knowledge_base);
			if(!gs.nil(kbData))
				gs.getSession().putClientData('kb_most_useful_articles',JSON.stringify(kbData));
		}else{
			kbData = JSON.parse(kbData);
		}
	}else{
		kbData = kbService.getMostUsefulArticles(options.max_records,options.display_field,options.secondary_fields,options.knowledge_base);
	}
		
	result= kbData;
		
	options.result = result;
	data.template = $sp.getWidget("kb-list-widget-template", options);
	}

	function getKnowledgeFieldsfromProperties(){

		//Generate secondary fields based on legacy properties
		var fields = [];

		if(gs.getProperty('glide.knowman.search.show_article_number','false') == 'true'){
			var kbMod = new global.KBViewModel();
			if(kbMod.isVersioningEnabled()){
				fields.push('display_number');
			}else{
				fields.push('number');
			}
		}
		
		if(gs.getProperty('glide.knowman.search.show_author','false') == 'true')
			fields.push('author');
		if(gs.getProperty('glide.knowman.search.show_view_count','false') == 'true')
			fields.push('sys_view_count');		
		if(gs.getProperty('glide.knowman.search.show_last_modified','false') == 'true')
			fields.push('sys_updated_on');
		if(gs.getProperty('glide.knowman.search.show_published','false') == 'true')
			fields.push('published');
		if(gs.getProperty('glide.knowman.show_unpublished','false') == 'true')
			fields.push('workflow_state');
		if(gs.getProperty('glide.knowman.search.show_rating','false') == 'true')
			fields.push('rating');

		return fields;
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-04-20 13:15:59</sys_created_on>
        <sys_id>027f80e097c34110f964b998c253af04</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>UITA Most Useful Knowledge</sys_name>
        <sys_package display_value="UpInTheAir" source="x_757981_up">04ff5f8a073201104679f8ed7c1ed021</sys_package>
        <sys_policy/>
        <sys_scope display_value="UpInTheAir">04ff5f8a073201104679f8ed7c1ed021</sys_scope>
        <sys_update_name>sp_widget_027f80e097c34110f964b998c253af04</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-04-20 13:19:51</sys_updated_on>
        <template><![CDATA[<div class="kb-article-list">
 <sp-widget widget="::c.data.template"></sp-widget>
</div>]]></template>
    </sp_widget>
</record_update>
